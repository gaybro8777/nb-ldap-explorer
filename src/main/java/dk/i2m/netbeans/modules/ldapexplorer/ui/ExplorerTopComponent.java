/*
 *  Copyright 2010 Interactive Media Management
 * 
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 * 
 *       http://www.apache.org/licenses/LICENSE-2.0
 * 
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *  under the License.
 */
package dk.i2m.netbeans.modules.ldapexplorer.ui;

import dk.i2m.netbeans.modules.ldapexplorer.model.ConnectionException;
import dk.i2m.netbeans.modules.ldapexplorer.model.LdapEntryChildren;
import dk.i2m.netbeans.modules.ldapexplorer.model.LdapServer;
import java.util.ResourceBundle;
import javax.swing.JOptionPane;
import org.openide.explorer.ExplorerManager;
import org.openide.nodes.AbstractNode;
import org.openide.util.ImageUtilities;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;
import org.openide.util.Utilities;

/**
 * {@link TopComponent} implementing an explorer view of an LDAP service.
 */
public final class ExplorerTopComponent extends TopComponent implements
        ExplorerManager.Provider {

    private ExplorerManager em = new ExplorerManager();
    private ResourceBundle bundle = NbBundle.getBundle(
            ExplorerTopComponent.class);
    //private static final String PREFERRED_ID = "ExplorerTopComponent";
    private LdapServer server;

    public ExplorerTopComponent() {
        initComponents();

        setName(bundle.getString("CTL_ExplorerTopComponent"));
        setToolTipText(bundle.getString("HINT_ExplorerTopComponent"));
        setIcon(ImageUtilities.loadImage(bundle.getString(
                "ICON_ExplorerTopComponent"), true));

        em.setRootContext(new AbstractNode(new LdapEntryChildren()));
        em.getRootContext().setDisplayName("Root");
    }

    @Override
    public int getPersistenceType() {
        return TopComponent.PERSISTENCE_ALWAYS;
    }

    @Override
    public void componentOpened() {
        LdapServerNode node = Utilities.actionsGlobalContext().lookup(
                LdapServerNode.class);

        if (node != null) {
            this.server = node.getServer();
            setDisplayName(this.server.toString());
        }
    }

    @Override
    public void componentClosed() {
        if (this.server != null) {
            try {
                this.server.disconnect();
            } catch (ConnectionException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(),
                        "An error occurred", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    public ExplorerManager getExplorerManager() {
        return em;
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     *
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        treeDetailSplitter = new javax.swing.JSplitPane();
        overviewTabbedPane = new javax.swing.JTabbedPane();
        beanTreeView1 = new org.openide.explorer.view.BeanTreeView();
        detailTabbedPane = new javax.swing.JTabbedPane();
        formPane = new javax.swing.JScrollPane();
        tblAttributes = new javax.swing.JTable();
        ldifPane = new javax.swing.JScrollPane();
        txtOutput = new javax.swing.JTextPane();

        treeDetailSplitter.setDividerLocation(200);
        treeDetailSplitter.setDividerSize(4);

        overviewTabbedPane.addTab(org.openide.util.NbBundle.getMessage(ExplorerTopComponent.class, "ExplorerTopComponent.beanTreeView1.TabConstraints.tabTitle"), beanTreeView1); // NOI18N

        treeDetailSplitter.setLeftComponent(overviewTabbedPane);

        formPane.setAutoscrolls(true);

        tblAttributes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Attribute", "Value"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        formPane.setViewportView(tblAttributes);

        detailTabbedPane.addTab(org.openide.util.NbBundle.getMessage(ExplorerTopComponent.class, "ExplorerTopComponent.formPane.TabConstraints.tabTitle"), formPane); // NOI18N

        ldifPane.setViewportView(txtOutput);

        detailTabbedPane.addTab(org.openide.util.NbBundle.getMessage(ExplorerTopComponent.class, "ExplorerTopComponent.ldifPane.TabConstraints.tabTitle"), ldifPane); // NOI18N

        treeDetailSplitter.setRightComponent(detailTabbedPane);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(treeDetailSplitter, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 758, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, treeDetailSplitter, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.openide.explorer.view.BeanTreeView beanTreeView1;
    private javax.swing.JTabbedPane detailTabbedPane;
    private javax.swing.JScrollPane formPane;
    private javax.swing.JScrollPane ldifPane;
    private javax.swing.JTabbedPane overviewTabbedPane;
    private javax.swing.JTable tblAttributes;
    private javax.swing.JSplitPane treeDetailSplitter;
    private javax.swing.JTextPane txtOutput;
    // End of variables declaration//GEN-END:variables
}
